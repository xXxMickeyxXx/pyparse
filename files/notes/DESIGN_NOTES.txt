__________PYPARSE RUNTIME FLOW OUTLINE__________
    (NOTE: this quick outline assumes each request (i.e. input/input chunk) is
    associated with an individual instance of each parser component, where
    applicable)

    I.) GET INPUT/INPUT CHUNK

    II.) INITIALIZE LEXER AND TOKENIZER

        A.) Setup/initialize events, handlers, etc.

    III.) INITIALIZE PARSER
    
        A.) Load or generate parse table
        B.) Setup/initialize events, handlers, etc.

    IV.) FEED INPUT/INPUT CHUNK INTO LEXER

        A.) Tokenize input

    V.) FEED LEXER OUTPUT INTO PARSER, AS INPUT
        (NOTE: see below outline labeled, 'PARSER RUNTIME OUTLINE' for specific details about parser's runtime)



__________PARSER RUNTIME OUTLINE__________
    (NOTE: revise this outline to include specific details on the parser's
    initialization steps, as briefly described in above: 'PYPARSE RUNTIME
    FLOW OUTLINE')
    
    I.) PARSER RECEIVES TOKENS

        A.) Parser receives tokens via it's 'feed' method

            1.) Within 'feed' method, 'flush' is also called in order to take previously
                parsed input (potentially partial input) and moves it to the finish area;
                the data in the finish area is input that has been as parsed as it possibly
                can be and is currently awaiting more parsed input

        B.) Once parser has received all input for a specific request, 'parse' is called;
            this is the parsing stage of a request and will ultimately lead to an 'ACCEPT'
            or 'FAIL'

    II.) PARSER'S PARSING CYCLE IS AS FOLLOWS:

        A.) 
